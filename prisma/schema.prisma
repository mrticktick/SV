// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tb_user {
  id        String     @id @default(uuid())
  username  String
  email     String     @unique
  password  String
  role      String?    // "ADMIN", "STAFF", "USER"
  phone     String?
  address   String?
  tokens    tb_token[]
  orders    tb_order[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model tb_token {
  id        String   @id @default(uuid())
  token     String   @db.Text
  userId    String
  user      tb_user  @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model tb_category {
  id          String       @id @default(uuid())
  name        String       @unique
  description String?
  image       String?
  products    tb_product[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model tb_product {
  id          String         @id @default(uuid())
  name        String
  description String?
  price       Decimal        @db.Decimal(10, 2)
  image       String?
  stock       Int            @default(0)
  isAvailable Boolean        @default(true)
  categoryId  String
  category    tb_category    @relation(fields: [categoryId], references: [id])
  orderItems  tb_orderItem[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model tb_order {
  id          String         @id @default(uuid())
  userId      String
  user        tb_user        @relation(fields: [userId], references: [id])
  status      OrderStatus    @default(PENDING)
  totalAmount Decimal        @db.Decimal(10, 2)
  items       tb_orderItem[]
  address     String
  phone       String
  note        String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model tb_orderItem {
  id        String     @id @default(uuid())
  orderId   String
  order     tb_order   @relation(fields: [orderId], references: [id])
  productId String
  product   tb_product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Decimal    @db.Decimal(10, 2)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PREPARING
  READY
  DELIVERED
  CANCELLED
}
